import tkinter as tk
from tkinter import messagebox
import random

class RockPaperScissors:
    def __init__(self, root):
        self.root = root
        self.root.title("Rock Paper Scissors")
        self.root.geometry("400x450")
        self.root.configure(bg="white")
        self.root.resizable(False, False)
        self.colors = {
            "bg": "white",
            "button_bg": "lightgray",
            "button_fg": "black",
            "button_active": "gray",
            "text": "black",
            "player": "blue",
            "computer": "red",
            "tie": "purple"
        }
        self.choices = ["rock", "paper", "scissors"]
        self.scores = {"player": 0, "computer": 0, "tie": 0}
        self.create_widgets()

    def create_widgets(self):
        tk.Label(
            self.root,
            text="Rock Paper Scissors",
            font=("Arial", 18, "bold"),
            bg="white"
        ).pack(pady=10)
        self.score_var = tk.StringVar()
        self.update_score()
        tk.Label(
            self.root,
            textvariable=self.score_var,
            font=("Arial", 12),
            bg="white"
        ).pack()
        tk.Label(
            self.root,
            text="Choose your move:",
            font=("Arial", 12),
            bg="white"
        ).pack(pady=10)

        buttons_frame = tk.Frame(self.root, bg="white")
        buttons_frame.pack()

        for choice in self.choices:
            btn = tk.Button(
                buttons_frame,
                text=choice.capitalize(),
                font=("Arial", 12),
                bg=self.colors["button_bg"],
                activebackground=self.colors["button_active"],
                width=8,
                command=lambda c=choice: self.play_round(c)
            )
            btn.pack(side=tk.LEFT, padx=5, pady=5)
        battle_frame = tk.Frame(self.root, bg="white")
        battle_frame.pack(pady=15)

        self.player_choice = tk.Label(
            battle_frame,
            text="You: -",
            font=("Arial", 12),
            fg=self.colors["player"],
            bg="white"
        )
        self.player_choice.pack(side=tk.LEFT, padx=10)

        tk.Label(
            battle_frame,
            text="vs",
            font=("Arial", 12),
            bg="white"
        ).pack(side=tk.LEFT, padx=5)

        self.computer_choice = tk.Label(
            battle_frame,
            text="Computer: -",
            font=("Arial", 12),
            fg=self.colors["computer"],
            bg="white"
        )
        self.computer_choice.pack(side=tk.LEFT, padx=10)
        self.result_var = tk.StringVar()
        self.result_var.set("Choose to play!")
        tk.Label(
            self.root,
            textvariable=self.result_var,
            font=("Arial", 12),
            bg="white"
        ).pack(pady=10)

        tk.Button(
            self.root,
            text="Reset",
            font=("Arial", 10),
            bg="lightgray",
            command=self.reset_game
        ).pack(side=tk.LEFT, padx=40, pady=10)

        tk.Button(
            self.root,
            text="Quit",
            font=("Arial", 10),
            bg="lightgray",
            command=self.quit_game
        ).pack(side=tk.RIGHT, padx=40, pady=10)

    def play_round(self, player_choice):
        computer_choice = random.choice(self.choices)
        
        self.player_choice.config(text=f"You: {player_choice.capitalize()}")
        self.computer_choice.config(text=f"Computer: {computer_choice.capitalize()}")
        
        if player_choice == computer_choice:
            result = "tie"
            message = "It's a tie!"
            color = self.colors["tie"]
        elif (player_choice == "rock" and computer_choice == "scissors") or \
             (player_choice == "paper" and computer_choice == "rock") or \
             (player_choice == "scissors" and computer_choice == "paper"):
            result = "player"
            message = f"You win! {player_choice} beats {computer_choice}"
            color = self.colors["player"]
        else:
            result = "computer"
            message = f"Computer wins! {computer_choice} beats {player_choice}"
            color = self.colors["computer"]
        
        self.scores[result] += 1
        self.update_score()
        self.result_var.set(message)
        self.result_var_label = tk.Label(fg=color)

    def update_score(self):
        self.score_var.set(f"Player: {self.scores['player']}  Computer: {self.scores['computer']}  Ties: {self.scores['tie']}")

    def reset_game(self):
        self.scores = {"player": 0, "computer": 0, "tie": 0}
        self.update_score()
        self.player_choice.config(text="You: -")
        self.computer_choice.config(text="Computer: -")
        self.result_var.set("Game reset! Choose to play!")

    def quit_game(self):
        if messagebox.askyesno("Quit", "Are you sure you want to quit?"):
            self.root.destroy()

if __name__ == "__main__":
    root = tk.Tk()
    game = RockPaperScissors(root)
    root.mainloop()
